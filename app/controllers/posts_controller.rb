class PostsController < ApplicationController
  def index
    # We declare an instance variable @posts and assign it a collection of Post objects 
    # using the all method provided by ActiveRecord. all returns a collection of  Post objects.
    @posts = Post.all
  end

  def show
    # We find the post that corresponds to the id in the params that was passed to  show and assign
    # it to @post. Unlike in the index method, in the show method, we populate an instance variable
    # with a single post, rather than a collection of posts.
    @post = Post.find(params[:id])
  end

  def new
    # We create an instance variable, @post, then assign it an empty post returned by  Post.new.
    @post = Post.new
  end
  
  def create
    # We call Post.new to create a new instance of Post.
    @post = Post.new
    @post.title = params[:post][:title]
    @post.body = params[:post][:body]

    # If we successfully save Post to the database, we display a success message using flash[:notice] and redirect
    # the user to the route generated by @post. Redirecting to @post will direct the user to the posts show view.
    if @post.save
      # We assign a value to flash[:notice]. The flash hash provides a way to pass temporary values between actions.
      # Any value placed in flash will be available in the next action and then deleted.
      flash[:notice] = "Post was saved."
      redirect_to @post
    else
      # If we do not successfully save Post to the database, we display an error message and render the new view again.
      flash.now[:alert] = "There was an error saving the post. Please try again."
      render :new
    end
  end

  def edit
  end
end
