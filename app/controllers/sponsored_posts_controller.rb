class SponsoredPostsController < ApplicationController
  def show
     @sponsored_post = SponsoredPost.find(params[:id])
  end

  def new
    @topic = Topic.find(params[:topic_id])
    @sponsored_post = SponsoredPost.new
  end
  
  def create
    @sponsored_post = SponsoredPost.new
    @sponsored_post.title = params[:sponsored_post][:title]
    @sponsored_post.body = params[:sponsored_post][:body]
    @sponsored_post.price = params[:sponsored_post][:price]
    @topic = Topic.find(params[:topic_id])
    # We assign a topic to a sponsored_post.
    @sponsored_post.topic = @topic

    # If we successfully save SponsoredPost to the database, we display a success message using flash[:notice] and redirect
    # the user to the route generated by @sponsored_post. Redirecting to @sponsored_post will direct the user to the sponsored_posts show view.
    if @sponsored_post.save
      # We assign a value to flash[:notice]. The flash hash provides a way to pass temporary values between actions.
      # Any value placed in flash will be available in the next action and then deleted.
      flash[:notice] = "SponsoredPost was saved."
      # We change the redirect to use the nested post path.
      redirect_to [@topic, @sponsored_post]
    else
      # If we do not successfully save SponsoredPost to the database, we display an error message and render the new view again.
      flash.now[:alert] = "There was an error saving the SponsoredPost. Please try again."
      render :new
    end
  end

  def edit
    @sponsored_post = SponsoredPost.find(params[:id])
  end
  
  def update
    @sponsored_post = SponsoredPost.find(params[:id])
    @sponsored_post.title = params[:sponsored_post][:title]
    @sponsored_post.body = params[:sponsored_post][:body]
    @sponsored_post.price = params[:sponsored_post][:price]
 
    if @sponsored_post.save
      flash[:notice] = "SponsoredPost was updated."
      # We change the redirect to use the nested post path.
      redirect_to [@sponsored_post.topic, @sponsored_post]
    else
      flash.now[:alert] = "There was an error saving the SponsoredPost. Please try again."
      render :edit
    end
  end
  
  def destroy
    @sponsored_post = SponsoredPost.find(params[:id])
 
    # We call destroy on @sponsored_post. If that call is successful, we set a flash message and redirect
    # the user to the sponsored_posts topic index view. If destroy fails then we redirect the user to the show view using render :show.
    if @sponsored_post.destroy
      flash[:notice] = "\"#{@sponsored_post.title}\" was deleted successfully."
      # When a sponsored_post is deleted, we direct users to the topic show view.
      redirect_to @sponsored_post.topic
    else
      flash.now[:alert] = "There was an error deleting the sponsored post."
      render :show
    end
  end
end
